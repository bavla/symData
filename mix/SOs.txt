info = { "ref": "D.S. Guru, Bapu B. Kiranagi, P. Nagabhushan: Multivalued type proximity measure and concept of mutual similarity value useful for clustering symbolic patterns. Pattern Recognition Letters 25 (2004) 1203–1213.",
   "spec": "page 1210, Table 7",
   "title": "Minimum and maximum temperatures of cities in degree Centigrade",
   "by": "Vladimir Batagelj, August 3, 2020"
   }
vars = [ ["Jan", "int"], ["Feb", "int"], ["Mar", "int"], ["Apr", "int"], ["May", "int"], ["Jun", "int"],
         ["Jul", "int"], ["Aug", "int"], ["Sep", "int"], ["Oct", "int"], ["Nov", "int"], ["Dec", "int"] ]
units = [
{ "id": 1, "lab": "Amsterdam", "X":  [[-4, 4], [-5, 3], [2, 12], [5, 15], [7, 17], [10, 20], [10, 20], [12, 23], [10, 20], [5, 15], [1, 10], [-1, 4] 	        ]},
{ "id": 2, "lab": "Athens", "X":  [[6, 12], [6, 12], [8, 16], [11, 19], [16, 25], [19, 29], [22, 32], [22, 32], [19, 28], [16, 23], [11, 18], [8, 14] 	        ]},
{ "id": 3, "lab": "Bahrain", "X":  [[13, 19], [14, 19], [17, 23], [21, 27], [25, 32], [28, 34], [29, 36], [30, 36], [28, 34], [24, 31], [20, 26], [15, 21]     ]},
{ "id": 4, "lab": "Bombay", "X":  [[19, 28], [19, 28], [22, 30], [24, 32], [27, 33], [26, 32], [25, 30], [25, 30], [24, 30], [24, 32], [23, 32], [20, 30]      ]},
{ "id": 5, "lab": "Cairo", "X":  [[8, 20], [9, 22], [11, 25], [14, 29], [17, 33], [20, 35], [22, 36], [22, 35], [20, 33], [18, 31], [14, 26], [10, 20] 	    ]},
{ "id": 6, "lab": "Calcutta", "X":  [[13, 27], [16, 29], [21, 34], [24, 36], [26, 36], [26, 33], [26, 32], [26, 32], [26, 32], [24, 32], [18, 29], [13, 26]	]},
{ "id": 7, "lab": "Colombo", "X":  [[22, 30], [22, 30], [23, 31], [24, 31], [25, 31], [25, 30], [25, 29], [25, 29], [25, 30], [24, 29], [23, 29], [22, 30] 	]},
{ "id": 8, "lab": "Copenhagen", "X":  [[-2, 2], [-3, 2], [-1, 5], [3, 10], [8, 16], [11, 20], [14, 22], [14, 21], [11, 18], [7, 12], [3, 7], [1, 4]		    ]},
{ "id": 9, "lab": "Dubai", "X":  [[13, 23], [14, 24], [17, 28], [19, 31], [22, 34], [25, 36], [28, 39], [28, 39], [25, 37], [21, 34], [17, 30], [14, 26]   	]},
{ "id":10, "lab": "Frankfurt", "X":  [[-10, 9], [-8, 10], [-4, 17], [0, 24], [3, 27], [7, 30], [8, 32], [8, 31], [5, 27], [0, 22], [-3, 14], [-8, 10]	    	]},
{ "id":11, "lab": "Geneva", "X":  [[-3, 5], [-6, 6], [3, 9], [7, 13], [10, 17], [15, 17], [16, 24], [16, 23], [11, 19], [6, 13], [3, 8], [-2, 6]	        	]},
{ "id":12, "lab": "Hong Kong", "X":  [[13, 17], [12, 16], [15, 19], [19, 23], [22, 27], [25, 29], [25, 30], [25, 30], [25, 29], [22, 27], [18, 23], [14, 19]	]},
{ "id":13, "lab": "Kula Lumpur", "X":  [[22, 31], [23, 32], [23, 33], [23, 33], [23, 32], [23, 32], [23, 31], [23, 32], [23, 32], [23, 31], [23, 31], [23, 31]	]},
{ "id":14, "lab": "Lisbon", "X":  [[8, 13], [8, 14], [9, 16], [11, 18], [13, 21], [16, 24], [17, 26], [18, 27], [17, 24], [14, 21], [11, 17], [8, 14]	    	]},
{ "id":15, "lab": "London", "X":  [[2, 6], [2, 7], [3, 10], [5, 13], [8, 17], [11, 20], [13, 22], [13, 21], [11, 19], [8, 14], [5, 10], [3, 7]		        	]},
{ "id":16, "lab": "Madras", "X":  [[20, 30], [20, 31], [22, 33], [26, 35], [28, 39], [27, 38], [26, 36], [26, 35], [25, 34], [24, 32], [22, 30], [21, 29]  	]},
{ "id":17, "lab": "Madrid", "X":  [[1, 9], [1, 12], [3, 16], [6, 19], [9, 24], [13, 29], [16, 34], [16, 33], [13, 28], [8, 20], [4, 14], [1, 9]	        	]},
{ "id":18, "lab": "Manila", "X":  [[21, 27], [22, 27], [24, 29], [24, 31], [25, 31], [25, 31], [23, 29], [24, 28], [25, 28], [24, 29], [22, 28], [22, 27]   	]},
{ "id":19, "lab": "Mauritius", "X":  [[22, 28], [22, 29], [22, 29], [21, 28], [19, 25], [18, 24], [17, 23], [17, 23], [17, 24], [18, 25], [19, 27], [21, 28]	]},
{ "id":20, "lab": "Mexico City", "X":  [[6, 22], [15, 23], [17, 25], [18, 27], [18, 27], [18, 27], [18, 27], [18, 26], [18, 26], [16, 25], [14, 25], [8, 23]	]},
{ "id":21, "lab": "Moscow", "X":  [[-13, -6], [-12, -5], [-8, 0], [0, 8], [7, 18], [11, 23], [13, 24], [11, 22], [6, 16], [1, 8], [-5, 0], [-11, -5]   		]},
{ "id":22, "lab": "Munich", "X":  [[-6, 1], [-5, 3], [-2, 9], [3, 14], [7, 18], [10, 21], [12, 23], [11, 23], [8, 20], [4, 13], [0, 7], [-4, 2]        		]},
{ "id":23, "lab": "Nairobi", "X":  [[12, 25], [13, 26], [14, 25], [14, 24], [13, 22], [12, 21], [11, 21], [11, 21], [11, 24], [13, 24], [13, 23], [13, 23] 	]},
{ "id":24, "lab": "New Delhi", "X":  [[6, 21], [10, 24], [14, 29], [20, 36], [26, 40], [28, 39], [27, 35], [26, 34], [24, 34], [18, 34], [11, 28], [7, 23] 	]},
{ "id":25, "lab": "New York", "X":  [[-2, 4], [-3, 4], [1, 9], [6, 15], [12, 22], [17, 27], [21, 29], [20, 28], [16, 24], [11, 19], [5, 12], [-2, 6]   		]},
{ "id":26, "lab": "Paris", "X":  [[1, 7], [1, 7], [2, 12], [5, 16], [8, 19], [12, 22], [14, 24], [13, 24], [11, 21], [7, 16], [4, 10], [1, 6]      			]},
{ "id":27, "lab": "Rome", "X":  [[4, 11], [5, 13], [7, 16], [10, 19], [13, 23], [17, 28], [20, 31], [20, 31], [17, 27], [13, 21], [9, 16], [5, 12]     		]},
{ "id":28, "lab": "San Francisco", "X":  [[6, 13], [6, 14], [7, 17], [8, 18], [10, 19], [11, 21], [12, 22], [12, 22], [12, 23], [11, 22], [8, 18], [6, 14] 	]},
{ "id":29, "lab": "Seoul", "X":  [[0, 7], [1, 6], [1, 8], [6, 16], [12, 22], [16, 25], [18, 31], [16, 30], [9, 28], [3, 24], [7, 19], [1, 8]       			]},
{ "id":30, "lab": "Singapore", "X":  [[23, 30], [23, 30], [24, 31], [24, 31], [24, 30], [25, 30], [25, 30], [25, 30], [24, 30], [24, 30], [24, 30], [23, 30]	]},
{ "id":31, "lab": "Stockholm", "X":  [[-9, -5], [-9, -6], [-4, 2], [1, 8], [6, 15], [11, 19], [14, 22], [13, 20], [9, 15], [5, 9], [1, 4], [-2, 2]     		]},
{ "id":32, "lab": "Sydney", "X":  [[20, 30], [20, 30], [18, 26], [16, 23], [12, 20], [5, 17], [8, 16], [9, 17], [11, 20], [13, 22], [16, 26], [20, 30]  		]},
{ "id":33, "lab": "Tehran", "X":  [[0, 5], [5, 8], [10, 15], [15, 18], [20, 25], [28, 30], [36, 38], [38, 40], [29, 30], [18, 20], [9, 12], [-5, 0]    		]},
{ "id":34, "lab": "Tokyo", "X":  [[0, 9], [0, 10], [3, 13], [9, 18], [14, 23], [18, 25], [22, 29], [23, 31], [20, 27], [13, 21], [8, 16], [2, 12]      		]},
{ "id":35, "lab": "Toronto", "X":  [[-8, -1], [-8, -1], [-4, 4], [-2, 11], [-8, 18], [13, 24], [16, 27], [16, 26], [12, 22], [6, 14], [-1, 17], [-5, 1]    	]},
{ "id":36, "lab": "Vienna", "X":  [[-2, 1], [-1, 3], [1, 8], [5, 14], [10, 19], [13, 22], [15, 24], [14, 23], [11, 19], [7, 13], [2, 7], [1, 3]        		]},
{ "id":37, "lab": "Zurich", "X":  [[-11, 9], [-8, 15], [-7, 18], [-1, 21], [2, 27], [6, 30], [10, 31], [8, 25], [5, 23], [3, 22], [0, 19], [-11, 8]            ]}
]

>>> wdir = "C:/Users/batagelj/Documents/papers/2020/zametki/aggreg"
>>> os.chdir(wdir)
>>> cities = {"format": "SDJSON", "info": info, "vars": vars, "units": units }
>>> js = open("cities.json",'w'); json.dump(cities,js,indent=1); js.close()

-------------------------------------------------------------------------------

info = { "ref": "D.S. Guru, Bapu B. Kiranagi, P. Nagabhushan: Multivalued type proximity measure and concept of mutual similarity value useful for clustering symbolic patterns. Pattern Recognition Letters 25 (2004) 1203–1213.",
   "spec": "page 1209, Table 5",
   "title": "Microcomputer data",
   "by": "Vladimir Batagelj, August 3, 2020"
   }
vars = [ ["Display", "cat"], ["RAM", "num"], ["ROM", "int"], ["Microprocessor", "cat"], ["Keys", "int"] ]

units = [
{"id":  1,"lab":"Apple II","X": ["Color", 48, [10,10],"6502" , [52, 52]]},
{"id":  2,"lab":"Atari 800","X": ["Color", 48, [10,10],"6502" , [57, 63]]},
{"id":  3,"lab":"Vic 20","X": ["Color", 32, [11,16],"6502A", [64, 73]]},
{"id":  4,"lab":"Sorcerer","X": ["B/W", 48, [4,4]  ,"Z80"  , [57, 63]]},
{"id":  5,"lab":"Zenith H 8","X": ["Built in", 64, [1,1]  ,"8080A", [64, 73]]},
{"id":  6,"lab":"Zenith H 89","X": ["Built in", 64, [8,8]  ,"Z80"  , [64, 73]]},
{"id":  7,"lab":"HP 85","X": ["Built in", 32, [80,80],"HP"   , [92, 92]]},
{"id":  8,"lab":"Horizon","X": ["Terminal", 64, [8,8]  ,"Z80"  , [57, 63]]},
{"id":  9,"lab":"Challenger","X": ["B/W", 32, [10,10],"6502" , [53, 56]]},
{"id": 10,"lab":"OhioSci.11","X": ["B/W", 48, [10,10],"6502C", [53, 56]]},
{"id": 11,"lab":"TRS-80 I","X": ["B/W", 48, [12,12],"Z80"  , [53, 56]]},
{"id": 12,"lab":"TRS-80 III","X": ["Built in", 48, [14,14],"Z80"  , [64, 73]]}
]

>>> micros = {"format": "SDJSON", "info": info, "vars": vars, "units": units }
>>> js = open("micros.json",'w'); json.dump(micros,js,indent=1); js.close()

-------------------------------------------------------------------------------

info = { "ref": "D.S. Guru, Bapu B. Kiranagi, P. Nagabhushan: Multivalued type proximity measure and concept of mutual similarity value useful for clustering symbolic patterns. Pattern Recognition Letters 25 (2004) 1203–1213.",
   "spec": "page 1208, Table 2",
   "title": "Fats and oils data",
   "by": "Vladimir Batagelj, August 3, 2020"
   }
vars = [ ["Specific gravity", "int"], ["Freezing point", "int"], ["Iodine value", "int"],
         ["Saponification value", "int"], ["Major fatty acids", "set"] ]
units = [
{ "id": 1, "lab": "Linseed oil",    "X":[ [0.930, 0.935], [-27.0, -18.0], [170.0, 204.0], [118.0, 196.0], ["L", "Ln", "O", "P", "M"	  ] ] },
{ "id": 2, "lab": "Perilla oil",    "X":[ [0.930, 0.937], [-5.0,   -4.0], [192.0, 208.0], [188.0, 197.0], ["L", "Ln", "O", "P", "S"	  ] ] },
{ "id": 3, "lab": "Cottonseed oil", "X":[ [0.916, 0.918], [-6.0,   -1.0], [ 99.0, 113.0], [189.0, 198.0], ["L", "O",  "P", "M", "S"	  ] ] },
{ "id": 4, "lab": "Sesame oil",     "X":[ [0.920, 0.926], [-6.0,   -4.0], [104.0, 116.0], [187.0, 193.0], ["L", "O",  "P", "S", "A"	  ] ] },
{ "id": 5, "lab": "Camellia oil",   "X":[ [0.916, 0.917], [-21.0, -15.0], [ 80.0,  82.0], [189.0, 193.0], ["L", "O"	                  ] ] },
{ "id": 6, "lab": "Olive oil",      "X":[ [0.914, 0.919], [0.0,     6.0], [ 79.0,  90.0], [187.0, 196.0], ["L", "O",  "P", "S"	 	  ] ] },
{ "id": 7, "lab": "Beef tallow",    "X":[ [0.860, 0.870], [30.0,   38.0], [ 40.0,  48.0], [190.0, 199.0], ["O", "P",  "M", "S", "C"	  ] ] },
{ "id": 8, "lab": "Hog fat",        "X":[ [0.858, 0.864], [22.0,   32.0], [ 53.0,  77.0], [190.0, 202.0], ["L", "O", "P", "M", "S", "LU"] ] }
]

>>> oils = {"format": "SDJSON", "info": info, "vars": vars, "units": units }
>>> js = open("oils.json",'w'); json.dump(oils,js,indent=1); js.close()


